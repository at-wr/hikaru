---
import Foundation from '../../../layouts/Foundation.astro';
import PostListItem from '../../../components/PostListItem.astro';
import Header from '../../../components/Header.astro';
import { getCollection } from 'astro:content';
import SiteFooter from '../../../components/ui/SiteFooter.astro';

export async function getStaticPaths() {
  const posts = await getCollection('posts', ({ data }) => !data.draft);
  const allTags = posts.flatMap(post => post.data.tags);
  const uniqueTags = [...new Set(allTags)] as string[];
  
  return uniqueTags.map((tag) => ({
    params: { tag: tag.toLowerCase().replace(/\s+/g, '-') },
    props: { tag, posts: posts.filter(post => post.data.tags.includes(tag)) },
  }));
}

const { tag, posts } = Astro.props;

const sortedPosts = posts.sort((a, b) =>
  new Date(b.data.published).getTime() - new Date(a.data.published).getTime()
);
---

<Foundation 
  title={`Archive Tag: ${tag}`}
  description={`Posts tagged with ${tag}.`}
>
  <Fragment slot="header">
    <Header customTitle="Alan's Blog" />
  </Fragment>
  <div class="min-h-screen bg-white dark:bg-slate-900">
    <main id="main-content" class="px-8 md:px-16 lg:px-24 py-16" style="view-transition-name: main-content;">
      <div class="max-w-4xl mx-auto">
        
        <section class="mb-16">
          <div class="mb-6">
            <a 
              href="/archive" 
              class="inline-flex items-center text-slate-600 dark:text-slate-400 hover:text-slate-900 dark:hover:text-slate-100 transition-colors text-sm mb-4"
            >
              ‚Üê Back to Archive
            </a>
          </div>
          <h2 class="text-4xl md:text-5xl font-light text-slate-900 dark:text-slate-100 mb-6 leading-tight">
            #{tag}
          </h2>
          <p class="text-lg text-slate-600 dark:text-slate-300 leading-relaxed max-w-2xl">
            {sortedPosts.length} post{sortedPosts.length !== 1 ? 's' : ''} tagged with this topic.
          </p>
        </section>

        
        <section class="space-y-8">
          {sortedPosts.map(post => (
            <PostListItem
              title={post.data.title}
              description={post.data.description}
              slug={post.slug}
              published={post.data.published}
              category={post.data.category}
              showCategory={true}
              size="large"
            />
          ))}
        </section>

        <SiteFooter />
      </div>
    </main>
  </div>
</Foundation>

<style>
  @reference "tailwindcss";
</style>
