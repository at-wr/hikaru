---
import Foundation from '../../layouts/Foundation.astro';
import { getCollection } from 'astro:content';

// Get all blog posts
const allPosts = await getCollection('posts', ({ data }) => {
  return !data.draft;
});

// Sort posts by published date (newest first)
const sortedPosts = allPosts.sort((a, b) => 
  new Date(b.data.published).getTime() - new Date(a.data.published).getTime()
);

// Group posts by category
const categories = [...new Set(sortedPosts.map(post => post.data.category))];

// Helper function to format date
function formatDate(date: Date) {
  return new Date(date).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<Foundation 
  title="Archive" 
  description="Thoughts on development, technology, and building things."
>
  <div class="min-h-screen bg-white">
    <!-- Main content -->
    <main class="px-8 md:px-16 lg:px-24 py-16" style="view-transition-name: main-content;">
      <div class="max-w-4xl mx-auto">
        <!-- Hero section -->
        <section class="mb-16">
          <h2 class="text-4xl md:text-5xl font-light text-slate-900 mb-6 leading-tight">
            Archive
          </h2>
          <p class="text-lg text-slate-600 leading-relaxed max-w-2xl mb-8">
            Writing about development, technology, and lessons learned while building things.
          </p>
          
          <!-- Category links -->
          <div class="flex flex-wrap gap-3 text-sm font-mono">
            <span class="text-slate-500 font-mono">Filter:</span>
            <a href="/archive" class="category-link active">All</a>
            {categories.map(category => (
              <a 
                href={`/archive/category/${category.toLowerCase().replace(/\s+/g, '-')}`}
                class="category-link"
              >
                {category}
              </a>
            ))}
          </div>
        </section>

        <!-- Posts grid -->
        <section class="space-y-8">
          {sortedPosts.map(post => (
            <article class="blog-post border-b border-slate-200 pb-8 last:border-b-0">
              <div class="group">
                <div class="mb-4">
                  <div class="flex items-center gap-4 text-sm text-slate-500 font-mono mb-3">
                    <a 
                      href={`/archive/category/${post.data.category.toLowerCase().replace(/\s+/g, '-')}`}
                      class="inline-block px-3 py-1 bg-slate-100 text-slate-700 rounded-full text-sm font-medium hover:bg-slate-200 transition-colors"
                    >
                      {post.data.category}
                    </a>
                    <time datetime={post.data.published.toISOString()}>
                      {formatDate(post.data.published)}
                    </time>
                  </div>
                  <h3 class="text-2xl md:text-3xl font-light text-slate-900 mb-3 group-hover:text-slate-600 transition-colors">
                    <a href={`/archive/${post.slug}`} class="block hover-arrow">
                      {post.data.title}
                      <span class="arrow">â†’</span>
                    </a>
                  </h3>
                  <p class="text-base text-slate-600 leading-relaxed mb-4">
                    {post.data.description}
                  </p>
                </div>
              </div>
            </article>
          ))}
        </section>
      </div>
    </main>
  </div>
</Foundation>

<style>
  @reference "tailwindcss";
  
  .category-link {
    @apply text-slate-600 hover:text-slate-900 transition-colors underline decoration-slate-300 hover:decoration-slate-600;
  }
  
  .category-link.active {
    @apply text-slate-900 decoration-slate-900;
  }

  .hover-arrow {
    @apply relative;
  }

  .hover-arrow .arrow {
    @apply inline opacity-0 transform translate-x-[-10px] transition-all duration-300;
    white-space: nowrap;
  }

  .hover-arrow:hover .arrow {
    @apply opacity-100 translate-x-0;
  }
</style>
